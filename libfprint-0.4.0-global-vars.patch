--- a/libfprint/core.c
+++ b/libfprint/core.c
@@ -291,25 +291,25 @@
 #ifndef ENABLE_DEBUG_LOGGING
 	if (!log_level)
 		return;
-	if (level == LOG_LEVEL_WARNING && log_level < 2)
+	if (level == FPRINT_LOG_LEVEL_WARNING && log_level < 2)
 		return;
-	if (level == LOG_LEVEL_INFO && log_level < 3)
+	if (level == FPRINT_LOG_LEVEL_INFO && log_level < 3)
 		return;
 #endif
 
 	switch (level) {
-	case LOG_LEVEL_INFO:
+	case FPRINT_LOG_LEVEL_INFO:
 		prefix = "info";
 		break;
-	case LOG_LEVEL_WARNING:
+	case FPRINT_LOG_LEVEL_WARNING:
 		stream = stderr;
 		prefix = "warning";
 		break;
-	case LOG_LEVEL_ERROR:
+	case FPRINT_LOG_LEVEL_ERROR:
 		stream = stderr;
 		prefix = "error";
 		break;
-	case LOG_LEVEL_DEBUG:
+	case FPRINT_LOG_LEVEL_DEBUG:
 		stream = stderr;
 		prefix = "debug";
 		break;
--- a/libfprint/fp_internal.h
+++ b/libfprint/fp_internal.h
@@ -33,10 +33,10 @@
         (type *)( (char *)__mptr - offsetof(type,member) );})
 
 enum fpi_log_level {
-	LOG_LEVEL_DEBUG,
-	LOG_LEVEL_INFO,
-	LOG_LEVEL_WARNING,
-	LOG_LEVEL_ERROR,
+	FPRINT_LOG_LEVEL_DEBUG,
+	FPRINT_LOG_LEVEL_INFO,
+	FPRINT_LOG_LEVEL_WARNING,
+	FPRINT_LOG_LEVEL_ERROR,
 };
 
 void fpi_log(enum fpi_log_level, const char *component, const char *function,
@@ -53,14 +53,14 @@
 #endif
 
 #ifdef ENABLE_DEBUG_LOGGING
-#define fp_dbg(fmt...) _fpi_log(LOG_LEVEL_DEBUG, fmt)
+#define fp_dbg(fmt...) _fpi_log(FPRINT_LOG_LEVEL_DEBUG, fmt)
 #else
 #define fp_dbg(fmt...)
 #endif
 
-#define fp_info(fmt...) _fpi_log(LOG_LEVEL_INFO, fmt)
-#define fp_warn(fmt...) _fpi_log(LOG_LEVEL_WARNING, fmt)
-#define fp_err(fmt...) _fpi_log(LOG_LEVEL_ERROR, fmt)
+#define fp_info(fmt...) _fpi_log(FPRINT_LOG_LEVEL_INFO, fmt)
+#define fp_warn(fmt...) _fpi_log(FPRINT_LOG_LEVEL_WARNING, fmt)
+#define fp_err(fmt...) _fpi_log(FPRINT_LOG_LEVEL_ERROR, fmt)
 
 #ifndef NDEBUG
 #define BUG_ON(condition) \
